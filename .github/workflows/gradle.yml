# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: Spring Boot & Gradle CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        

    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew

    - name: Cache Gradle packages
      uses: actions/cache@v2
      with:
        path: |
          ~/.gradle/caches
          ~/.gradle/wrapper
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: make application-prod.yml
      run: |
        cd ./src/main/resources
        touch ./application-prod.yml
        echo "${{ secrets.APPLICATION_PROD }}" > ./application-prod.yml


    - name: Run Gradle build
      run: ./gradlew build

    - name: Run tests
      run: ./gradlew test
      
    - name: Copy files to EC2
      uses: easingthemes/ssh-deploy@v2.1.5
      env:
        SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
        SOURCE: "build/libs/"
        REMOTE_HOST: ${{ secrets.EC2_HOST }}
        REMOTE_USER: ${{ secrets.EC2_USER }}
        TARGET: ${{ secrets.EC2_TARGET_PATH }}

    - name: Deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.EC2_HOST }} # EC2 인스턴스 퍼블릭 DNS
        username: ${{ secrets.EC2_USER }}
        key: ${{ secrets.SSH_PRIVATE_KEY }} # pem 키
        script: |
           sh /home/ubuntu/deploy/restart.sh
